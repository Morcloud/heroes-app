{"version":3,"sources":["types/types.js","auth/authReducer.js","auth/AuthContext.js","components/login/LoginSreen.jsx","data/heroes.js","components/heroes/HeroCard.jsx","components/heroes/HeroList.jsx","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.jsx","components/ui/Navbar.jsx","components/heroes/HeroScreen.jsx","selectors/getHeroById.js","components/dc/DcScreen.jsx","components/search/SearchScreen.jsx","helpers/queryString.js","hooks/useForm.js","selectors/getHeroByName.js","routers/DashboardRoutes.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","HeroApp.jsx","index.js"],"names":["types","authReducer","state","action","type","payload","logged","AuthContext","createContext","init","JSON","parse","localStorage","getItem","AuthContextProvider","children","useReducer","user","dispatch","useEffect","setItem","stringify","Provider","value","LoginSreen","history","useContext","className","onClick","lastPath","name","replace","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","to","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","Navbar","useHistory","activeClassName","exact","push","HeroScreen","heroeid","useParams","find","length","goBack","DcScreen","SearchScreen","location","locationArray","split","result","forEach","element","clave","valor","queryString","useLocation","search","q","initialState","useState","values","setValues","handleInputChange","target","useForm","searchText","heroesFiltered","toLowerCase","getHeroByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","pathname","props","PublicRoute","AppRouter","HeroApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e42919eb.chunk.js","sourcesContent":["export const types = {\n    login: \"[auth] login\",\n    logout: \"[auth] logout\",\n};\n","import { types } from \"../types/types\";\n\n// const state = {\n//     name: \"Ricardo\",\n//     logged: true,\n// };\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true,\n            };\n\n        case types.logout:\n            return {\n                logged: false,\n            };\n\n        default:\n            return state;\n    }\n};\n","import { createContext, useEffect, useReducer } from \"react\";\nimport { authReducer } from \"./authReducer\";\n\nexport const AuthContext = createContext();\n\nconst init = () =>\n    JSON.parse(localStorage.getItem(\"user\")) || { logged: false };\n\nexport const AuthContextProvider = ({ children }) => {\n    const [user, dispatch] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n    }, [user]);\n\n    return (\n        <AuthContext.Provider value={{ user, dispatch }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../../auth/AuthContext\";\nimport { types } from \"../../types/types\";\n\nexport const LoginSreen = ({ history }) => {\n    const { dispatch } = useContext(AuthContext);\n\n    const handleClick = () => {\n        // history.push(\"/\");\n\n        const lastPath = localStorage.getItem(\"lastPath\") || \"/\";\n\n        dispatch({\n            type: types.login,\n            payload: {\n                name: \"Ricardo\",\n            },\n        });\n        history.replace(lastPath);\n    };\n\n    return (\n        <div className='container ms-5'>\n            <h1>login</h1>\n            <hr />\n            <button className='btn btn-primary' onClick={handleClick}>\n                Login\n            </button>\n        </div>\n    );\n};\n","export const heroes = [\n    {\n        id: \"dc-batman\",\n        superhero: \"Batman\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Bruce Wayne\",\n        first_appearance: \"Detective Comics #27\",\n        characters: \"Bruce Wayne\",\n    },\n    {\n        id: \"dc-superman\",\n        superhero: \"Superman\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Kal-El\",\n        first_appearance: \"Action Comics #1\",\n        characters: \"Kal-El\",\n    },\n    {\n        id: \"dc-flash\",\n        superhero: \"Flash\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Jay Garrick\",\n        first_appearance: \"Flash Comics #1\",\n        characters: \"Jay Garrick, Barry Allen, Wally West, Bart Allen\",\n    },\n    {\n        id: \"dc-green\",\n        superhero: \"Green Lantern\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Alan Scott\",\n        first_appearance: \"All-American Comics #16\",\n        characters:\n            \"Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz\",\n    },\n    {\n        id: \"dc-arrow\",\n        superhero: \"Green Arrow\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Oliver Queen\",\n        first_appearance: \"More Fun Comics #73\",\n        characters: \"Oliver Queen\",\n    },\n    {\n        id: \"dc-wonder\",\n        superhero: \"Wonder Woman\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Princess Diana\",\n        first_appearance: \"All Star Comics #8\",\n        characters: \"Princess Diana\",\n    },\n    {\n        id: \"dc-martian\",\n        superhero: \"Martian Manhunter\",\n        publisher: \"DC Comics\",\n        alter_ego: \"J'onn J'onzz\",\n        first_appearance: \"Detective Comics #225\",\n        characters: \"Martian Manhunter\",\n    },\n    {\n        id: \"dc-robin\",\n        superhero: \"Robin/Nightwing\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Dick Grayson\",\n        first_appearance: \"Detective Comics #38\",\n        characters: \"Dick Grayson\",\n    },\n    {\n        id: \"dc-blue\",\n        superhero: \"Blue Beetle\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Dan Garret\",\n        first_appearance: \"Mystery Men Comics #1\",\n        characters: \"Dan Garret, Ted Kord, Jaime Reyes\",\n    },\n    {\n        id: \"dc-black\",\n        superhero: \"Black Canary\",\n        publisher: \"DC Comics\",\n        alter_ego: \"Dinah Drake\",\n        first_appearance: \"Flash Comics #86\",\n        characters: \"Dinah Drake, Dinah Lance\",\n    },\n    {\n        id: \"marvel-spider\",\n        superhero: \"Spider Man\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Peter Parker\",\n        first_appearance: \"Amazing Fantasy #15\",\n        characters: \"Peter Parker\",\n    },\n    {\n        id: \"marvel-captain\",\n        superhero: \"Captain America\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Steve Rogers\",\n        first_appearance: \"Captain America Comics #1\",\n        characters: \"Steve Rogers\",\n    },\n    {\n        id: \"marvel-iron\",\n        superhero: \"Iron Man\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Tony Stark\",\n        first_appearance: \"Tales of Suspense #39\",\n        characters: \"Tony Stark\",\n    },\n    {\n        id: \"marvel-thor\",\n        superhero: \"Thor\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Thor Odinson\",\n        first_appearance: \"Journey into Myster #83\",\n        characters: \"Thor Odinson\",\n    },\n    {\n        id: \"marvel-hulk\",\n        superhero: \"Hulk\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Bruce Banner\",\n        first_appearance: \"The Incredible Hulk #1\",\n        characters: \"Bruce Banner\",\n    },\n    {\n        id: \"marvel-wolverine\",\n        superhero: \"Wolverine\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"James Howlett\",\n        first_appearance: \"The Incredible Hulk #180\",\n        characters: \"James Howlett\",\n    },\n    {\n        id: \"marvel-daredevil\",\n        superhero: \"Daredevil\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Matthew Michael Murdock\",\n        first_appearance: \"Daredevil #1\",\n        characters: \"Matthew Michael Murdock\",\n    },\n    {\n        id: \"marvel-hawkeye\",\n        superhero: \"Hawkeye\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Clinton Francis Barton\",\n        first_appearance: \"Tales of Suspense #57\",\n        characters: \"Clinton Francis Barton\",\n    },\n    {\n        id: \"marvel-cyclops\",\n        superhero: \"Cyclops\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Scott Summers\",\n        first_appearance: \"X-Men #1\",\n        characters: \"Scott Summers\",\n    },\n    {\n        id: \"marvel-silver\",\n        superhero: \"Silver Surfer\",\n        publisher: \"Marvel Comics\",\n        alter_ego: \"Norrin Radd\",\n        first_appearance: \"The Fantastic Four #48\",\n        characters: \"Norrin Radd\",\n    },\n];\n","import { Link } from \"react-router-dom\";\nimport \"./HeroCard.css\";\n\nexport const HeroCard = ({\n    id,\n    superhero,\n    publisher,\n    alter_ego,\n    first_appearance,\n    characters,\n}) => {\n    return (\n        <Link to={`./hero/${id}`} className='my-card'>\n            <img\n                src={`./assets/heroes/${id}.jpg`}\n                className='img img-responsive'\n                alt={superhero}\n            />\n            <div className='profile-name'>{superhero}</div>\n            <div className='profile-position'>{alter_ego}</div>\n            <div className='profile-overview'>\n                <div className='profile-overview'>\n                    <div className='row'>\n                        <div className='col-ms-4'>\n                            <h3>{publisher}</h3>\n                            <p>\n                                Primera aparición: <br />\n                                {first_appearance}\n                            </p>\n                            {alter_ego !== characters && <p>{characters}</p>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n","import { useMemo } from \"react\";\nimport { getHeroesByPublisher } from \"../../selectors/getHeroesByPublisher\";\nimport { HeroCard } from \"./HeroCard\";\n\nexport const HeroList = ({ publisher }) => {\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\n    // const heroes = getHeroesByPublisher(publisher);\n\n    return (\n        <ul className='card-columns animate__animated animate__fadeIn'>\n            {heroes.map((hero) => (\n                <HeroCard key={hero.id} {...hero} />\n            ))}\n        </ul>\n    );\n};\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByPublisher = (publisher) => {\n    const validPublishers = [\"DC Comics\", \"Marvel Comics\"];\n\n    if (!validPublishers.includes(publisher))\n        throw new Error(`Publisher ${publisher} no reconocido`);\n\n    return heroes.filter((hero) => hero.publisher === publisher);\n};\n","import React from \"react\";\nimport { HeroList } from \"../heroes/HeroList\";\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Comics</h1>\n            <hr />\n            <HeroList publisher='Marvel Comics' />\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../auth/AuthContext\";\nimport { types } from \"../../types/types\";\n\nexport const Navbar = () => {\n    const {\n        user: { name },\n        dispatch,\n    } = useContext(AuthContext);\n\n    const history = useHistory();\n\n    const handleLogout = () => {\n        dispatch({\n            type: types.logout,\n        });\n        history.push(\"/login\");\n    };\n\n    return (\n        <nav className='navbar navbar-expand-sm navbar-dark bg-dark'>\n            <Link className='navbar-brand' to='/'>\n                Asociaciones\n            </Link>\n\n            <div className='navbar-collapse'>\n                <div className='navbar-nav'>\n                    <NavLink\n                        activeClassName='active'\n                        className='nav-item nav-link'\n                        exact\n                        to='/marvel'\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName='active'\n                        className='nav-item nav-link'\n                        exact\n                        to='/dc'\n                    >\n                        DC\n                    </NavLink>\n                    <NavLink\n                        activeClassName='active'\n                        className='nav-item nav-link'\n                        exact\n                        to='/search'\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className='navbar-collapse collapse i-100 order-3 dual-collapse2'>\n                <ul className='navbar-nav ms-auto'>\n                    <span className='nav-item nav-link text-info'>{name}</span>\n                    <button\n                        className='nav-item nav-link btn'\n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { getHeroById } from \"../../selectors/getHeroById\";\n\nexport const HeroScreen = ({ history }) => {\n    const { heroeid } = useParams();\n\n    const hero = useMemo(() => getHeroById(heroeid), [heroeid]);\n\n    // const hero = getHeroById(heroeid);\n\n    const handleReturn = () => {\n        if (history.length <= 2) {\n            history.push(\"/\");\n        } else {\n            history.goBack();\n        }\n    };\n\n    if (!hero) {\n        return <Redirect to='/' />;\n    }\n\n    const { superhero, publisher, alter_ego, first_appearance, characters } =\n        hero;\n\n    return (\n        <div className='row ms-5'>\n            <div className='col-4'>\n                <img\n                    className='img-thumbnail animate__animated animate__fadeInLeft'\n                    alt={superhero}\n                    src={`../assets/heroes/${heroeid}.jpg`}\n                />\n            </div>\n            <div className='col-8'>\n                <h3>{superhero}</h3>\n                <ul className='list-group list-group-flush animate__animated animate__fadeIn'>\n                    <li className='list-group-item'>\n                        <b>Alter ego: </b>\n                        {alter_ego}\n                    </li>\n                    <li className='list-group-item'>\n                        <b>Publisher: </b>\n                        {publisher}\n                    </li>\n                    <li className='list-group-item'>\n                        <b>First appearance: </b>\n                        {first_appearance}\n                    </li>\n                </ul>\n                <h5>Characters</h5>\n                <p>{characters}</p>\n                <button className='btn btn-outline-info' onClick={handleReturn}>\n                    Return\n                </button>\n            </div>\n        </div>\n    );\n};\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroById = (id) => heroes.find((hero) => hero.id === id);\n","import React from \"react\";\nimport { HeroList } from \"../heroes/HeroList\";\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Comics</h1>\n            <hr />\n            <HeroList publisher='DC Comics' />\n        </div>\n    );\n};\n","import { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { queryString } from \"../../helpers/queryString\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { getHeroByName } from \"../../selectors/getHeroByName\";\nimport { HeroCard } from \"../heroes/HeroCard\";\n\nexport const SearchScreen = ({ history }) => {\n    const location = useLocation();\n    const { q = \"\" } = queryString(location.search);\n\n    const [{ searchText }, handleInputChange] = useForm({\n        searchText: q,\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(`?q=${searchText}`);\n    };\n\n    const heroesFiltered = useMemo(() => getHeroByName(q), [q]);\n    // const heroesFiltered = getHeroByName(searchText);\n\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr />\n            <div className='row'>\n                <div className='col-5'>\n                    <h4>Search Form</h4>\n                    <hr />\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            name='searchText'\n                            type='text'\n                            placeholder='Find your hero'\n                            className='form-control'\n                            autoComplete='off'\n                            value={searchText}\n                            onChange={handleInputChange}\n                        />\n                        <button\n                            type='submit'\n                            className='btn btn-block btn-outline-primary'\n                        >\n                            Search...\n                        </button>\n                    </form>\n                </div>\n                <div className='col-7'>\n                    <h4>Results</h4>\n                    <hr />\n                    {q === \"\" && (\n                        <div className='alert alert-info'>Search a hero</div>\n                    )}\n                    {q !== \"\" && heroesFiltered.length === 0 && (\n                        <div className='alert alert-danger'>\n                            There is no hero with {q}{\" \"}\n                        </div>\n                    )}\n                    {heroesFiltered.map((hero) => (\n                        <HeroCard key={hero.id} {...hero} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","export const queryString = (location) => {\n    const locationArray = location.replace(\"?\", \"\").split(\"&\");\n    let result = {};\n    locationArray.forEach((element) => {\n        const [clave, valor] = element.split(\"=\");\n        result = { ...result, [clave]: valor };\n    });\n    return result;\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => setValues(initialState);\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value,\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroByName = (name = \"\") => {\n    if (name === \"\") return [];\n\n    name = name.toLowerCase();\n\n    return heroes.filter((hero) => hero.superhero.toLowerCase().includes(name));\n};\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\nimport { Navbar } from \"../components/ui/Navbar\";\nimport { HeroScreen } from \"../components/heroes/HeroScreen\";\nimport { DcScreen } from \"../components/dc/DcScreen\";\nimport { SearchScreen } from \"../components/search/SearchScreen\";\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n            <div className='container ms-2'>\n                <Switch>\n                    <Route exact path='/marvel' component={MarvelScreen} />\n                    <Route exact path='/dc' component={DcScreen} />\n                    <Route exact path='/search' component={SearchScreen} />\n                    <Route exact path='/hero/:heroeid' component={HeroScreen} />\n\n                    <Redirect to='/marvel' />\n                </Switch>\n            </div>\n        </>\n    );\n};\n","import { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    localStorage.setItem(\"lastPath\", rest.location.pathname);\n\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to='/login' />\n                )\n            }\n        />\n    );\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                !isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to='/' />\n                )\n            }\n        />\n    );\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { LoginSreen } from \"../components/login/LoginSreen\";\nimport { DashboardRoutes } from \"./DashboardRoutes\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path='/login'\n                        component={LoginSreen}\n                        isAuthenticated={user.logged}\n                    />\n                    <PrivateRoute\n                        path='/'\n                        component={DashboardRoutes}\n                        isAuthenticated={user.logged}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import React from \"react\";\nimport { AuthContextProvider } from \"./auth/AuthContext\";\nimport { AppRouter } from \"./routers/AppRouter\";\n\nexport const HeroApp = () => {\n    return (\n        <AuthContextProvider>\n            <AppRouter />\n        </AuthContextProvider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HeroApp } from \"./HeroApp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HeroApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}